package src.niuke.advance.chapter4;


/**
 * 异或运算：
 * 1.满足交换律和结合律，一组数异或结果和异或顺序无关
 * 2.0和0异或结果是0，0和N异或（N代表任意数），结果是N
 * <p>
 * 与&  或| 异或^
 * <p>
 * 一：与运算符（&）
 * 预算规则：
 * <p>
 * 0&0=0；0&1=0；1&0=0；1&1=1
 * <p>
 * 即：两个同时为1，结果为1，否则为0
 * <p>
 * 例如：3&5
 * <p>
 * 十进制3转为二进制的3：0000 0011
 * <p>
 * 十进制5转为二进制的5：0000 0101
 * <p>
 * ------------------------结果：0000 0001 ->转为十进制：1
 * <p>
 * 即：3&5 = 1
 * <p>
 * 二：或运算（|）
 * 运算规则：
 * <p>
 * 0|0=0；  0|1=1；  1|0=1；   1|1=1；
 * <p>
 * 即 ：参加运算的两个对象，一个为1，其值为1。
 * <p>
 * 例如：3|5　即 00000011 | 0000 0101 = 00000111，因此，3|5=7。
 * <p>
 * 三：异或运算符（^）
 * 运算规则：0^0=0；  0^1=1；  1^0=1；   1^1=0；
 * <p>
 * 即：参加运算的两个对象，如果两个位为“异”（值不同），则该位结果为1，否则为0。
 * <p>
 * 例如：3^5 =  0000 0011 | 0000 0101 =0000 0110，因此，3^5 = 6
 */

/**
 * 与&  或| 异或^
 *
 * 一：与运算符（&）
 * 预算规则：
 *
 * 0&0=0；0&1=0；1&0=0；1&1=1
 *
 * 即：两个同时为1，结果为1，否则为0
 *
 * 例如：3&5
 *
 * 十进制3转为二进制的3：0000 0011
 *
 * 十进制5转为二进制的5：0000 0101
 *
 * ------------------------结果：0000 0001 ->转为十进制：1
 *
 * 即：3&5 = 1
 *
 * 二：或运算（|）
 * 运算规则：
 *
 * 0|0=0；  0|1=1；  1|0=1；   1|1=1；
 *
 * 即 ：参加运算的两个对象，一个为1，其值为1。
 *
 * 例如：3|5　即 00000011 | 0000 0101 = 00000111，因此，3|5=7。　
 *
 * 三：异或运算符（^）
 * 运算规则：0^0=0；  0^1=1；  1^0=1；   1^1=0；
 *
 * 即：参加运算的两个对象，如果两个位为“异”（值不同），则该位结果为1，否则为0。
 *
 * 例如：3^5 =  0000 0011 | 0000 0101 =0000 0110，因此，3^5 = 6
 */

/**
 * @author yan.zhang
 * @date 2020/8/9 17:38
 */
public class XOR {
}
